Student project ideas for Sem 2 2025

----------------------------------
AVL
==AVL tree polishing: 
====show recursion with boxes, 
====change other highlighting, 
====tree redrawing smoother, iterative???,...
==Recursive BST (same as AVL minus last two lines of code).
==Consistency between BST-AVL (iterative and recursive)
==Improve iterative BST (maximise consistency with recursive).
...


----------------------------------
"UI": 
==main menu:
====format
====ability to hide algorithms in progress 
====have *single* list of algorithms in code (currently
components/mainmenu/index.js components/mainmenu/GraphAlgorithms.js
components/AlgorithmMenu.js algorithms/index.js)
====add keywords for search
==colors consistent (1) graph algorithms (2) throughout AIA
==update wiki re colors, adding new algorithm,...

----------------------------------
Simple algorithms
==demonstrate recursion
==demonstrate bad complexity, e.g. linear sorts, pre-prepared data input sets

----------------------------------
Linked lists (again)?
== aim for nice animation of list mergesort but try to make it general
enough to be easily used/adapted for other algorithms


----------------------------------
Ideas from notes.txt etc:
Maxflow (naive/Ford-Fulkerson; relies on BFS/DFS)?
Minimax, alpha-beta
Tries?
Splay trees
Polish off current string searching algs



----------------------------------
World peace

